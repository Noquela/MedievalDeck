name: CI

on:
  push:
    branches: [ main, sprint-* ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true
    
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
    
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root
    
    - name: Install project
      run: poetry install --no-interaction
    
    - name: Run linting (ruff)
      run: poetry run ruff check src/ tests/
    
    - name: Run formatting check (black)
      run: poetry run black --check src/ tests/
    
    - name: Run import sorting check (isort)
      run: poetry run isort --check-only src/ tests/
    
    - name: Run type checking (mypy)
      run: poetry run mypy src/
    
    - name: Run tests with pygame headless
      env:
        SDL_VIDEODRIVER: dummy
      run: poetry run pytest -q
